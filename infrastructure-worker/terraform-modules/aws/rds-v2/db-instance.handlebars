resource "aws_db_instance" "main_rds_instance" {
  identifier        = "${local.db_identifier}"
  allocated_storage = "${var.allocated_storage}"
  engine            = "${var.engine_type}"
  engine_version    = "${var.engine_version}"
  instance_class    = "${var.instance_class}"
  name              = "${var.database_name}"
  username          = "${var.database_user}"
  password          = "${var.database_password}"

  port = "${var.database_port}"
  
  # Because we're assuming a VPC, we use this option, but only one SG id
  vpc_security_group_ids = ["${var.vpc_security_group_id}", "${aws_security_group.db_sg.id}"]

  # We're creating a subnet group in the module and passing in the name
  db_subnet_group_name = "${aws_db_subnet_group.default.id}"
  {{#if parameterGroupFamily}}
  parameter_group_name = "${aws_db_parameter_group.custom_parameter_group.id}"
  {{/if}}

  multi_az            = "${var.is_multi_az}"
  storage_type        = "${var.storage_type}"
  publicly_accessible = "${var.publicly_accessible}"
  {{#if iops}}
  iops                = "${var.iops}"
  {{/if}}

  # Upgrades
  allow_major_version_upgrade = "${var.allow_major_version_upgrade}"
  auto_minor_version_upgrade  = "${var.auto_minor_version_upgrade}"
  apply_immediately           = "${var.apply_immediately}"
  {{#if maintenanceWindow}}
  maintenance_window          = "${var.maintenance_window}"
  {{/if}}

  # Snapshots and backups
  skip_final_snapshot   = "${var.skip_final_snapshot}"
  copy_tags_to_snapshot = "${var.copy_tags_to_snapshot}"
  {{!-- {{#unless skipFinalSnapshot}} --}}
  final_snapshot_identifier = "${local.db_identifier}-final-snapshot"
  {{!-- {{/unless}} --}}
  {{#if backupRetentionPeriod}}
  backup_retention_period = "${var.backup_retention_period}"
  {{/if}}
  {{#if backupWindow}}
  backup_window           = "${var.backup_window}"
  {{/if}}

}

{{#if parameterGroupFamily}}
resource "aws_db_parameter_group" "custom_parameter_group" {
  name   = "${local.db_identifier}-${replace(var.parameter_group_family, ".", "")}-custom-parameters"
  family = "${var.parameter_group_family}"

  {{#each parameters}}
  parameter {
    name = "{{{name}}}"
    value = "{{{value}}}"
  }
  {{/each}}

}
{{/if}}