definitions:
  bitbucket.project:
    properties:
      full_name:
        type: string
    type: object
  bitbucket.settingsDto:
    properties:
      integrationName:
        type: string
      repoFullName:
        type: string
    type: object
  github.project:
    properties:
      full_name:
        type: string
    type: object
  github.settingsDto:
    properties:
      integrationName:
        type: string
      repoFullName:
        type: string
    type: object
  gitlab.project:
    properties:
      id:
        type: integer
      name_with_namespace:
        type: string
    type: object
  gitlab.settingsDto:
    properties:
      integrationName:
        type: string
      projectId:
        type: string
    type: object
info:
  contact:
    email: contact@utopiops.com
    name: Utopiops
    url: http://www.utopiops.com
  description: This is the git integration API Documentation.
  license:
    name: Copyright (C) Utopiops
  title: Git Integration API
  version: 1.0.0
paths:
  /bitbucket/environment/name/:env_name/application/name/:app_Name/commits/recent:
    get:
      description: get list of recent commits for a specific user's repository
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /bitbucket/environment/name/:env_name/application/name/:app_Name/pulls/recent:
    get:
      description: get list of recent pull requests for a specific user's repository
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare pull requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare pull requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /bitbucket/environment/name/:env_name/application/name/:app_Name/settings:
    delete:
      description: delete settings of bitbucket repository from database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: ""
    post:
      description: store settings of bitbucket repository in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: name of user's repository and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/bitbucket.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
    put:
      description: update settings of bitbucket repository in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: name of user's repository and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/bitbucket.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
  /bitbucket/environment/name/:env_name/application/name/:app_Name/summary:
    get:
      description: get a summary information about repository (just 3 number about
        repository)
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /bitbucket/project:
    get:
      description: get list of all user's repositories
      parameters:
      - description: name of user integration in our system
        in: query
        name: integration_name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/bitbucket.project'
            type: array
  /github/environment/name/:env_name/application/name/:app_Name/commits/recent:
    get:
      description: get list of recent commits for a specific user's repository
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /github/environment/name/:env_name/application/name/:app_Name/pulls/recent:
    get:
      description: get list of recent pull requests for a specific user's repository
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare pull requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare pull requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /github/environment/name/:env_name/application/name/:app_Name/settings:
    delete:
      description: delete settings of github repository from database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: ""
    post:
      description: store settings of github repository in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: name of user's repository and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/github.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
    put:
      description: update settings of github repository in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: name of user's repository and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/github.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
  /github/environment/name/:env_name/application/name/:app_Name/summary:
    get:
      description: get a summary information about repository (just 5 number about
        repository)
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /github/project:
    get:
      description: get list of all user's repositories
      parameters:
      - description: name of user integration in our system
        in: query
        name: integration_name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/github.project'
            type: array
  /gitlab/environment/name/:env_name/application/name/:app_Name/commits/recent:
    get:
      description: get list of recent commits for a specific user's project
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare commits in range From and To dates (date format:
          ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /gitlab/environment/name/:env_name/application/name/:app_Name/pulls/recent:
    get:
      description: get list of recent merge requests for a specific user's project
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: 'use to declare merge requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: from
        type: string
      - description: 'use to declare merge requests in range From and To dates (date
          format: ISO 8601 format YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: to
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /gitlab/environment/name/:env_name/application/name/:app_Name/settings:
    delete:
      description: delete settings of gitlab project from database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            type: ""
    post:
      description: store settings of gitlab project in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: id of user's project and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/gitlab.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
    put:
      description: update settings of gitlab project in database
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      - description: id of user's project and name of integration in our system
        in: body
        name: settingsDto
        required: true
        schema:
          $ref: '#/definitions/gitlab.settingsDto'
      responses:
        "200":
          description: ok
          schema:
            type: ""
  /gitlab/environment/name/:env_name/application/name/:app_Name/summary:
    get:
      description: get a summary information about project (just 5 number about project)
      parameters:
      - description: name of user environment in our system
        in: path
        name: env_name
        required: true
        type: string
      - description: name of user application in our system
        in: path
        name: app_Name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              type: string
            type: array
  /gitlab/project:
    get:
      description: get list of all user's projects
      parameters:
      - description: name of user integration in our system
        in: query
        name: integration_name
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/gitlab.project'
            type: array
swagger: "2.0"
