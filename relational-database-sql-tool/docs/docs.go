// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Utopiops",
            "url": "http://www.utopiops.com",
            "email": "contactus@utopiops.com"
        },
        "license": {
            "name": "Copyright (C) Utopiops"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/rds/environment/name/{env_name}/database/name/{db_name}/get_table_rows": {
            "post": {
                "description": "get top 100 rows of a specific table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "username, password, database name and table name are necessary to get top 100 rows of a table",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rds.RDSQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rds/environment/name/{env_name}/database/name/{db_name}/list_db": {
            "post": {
                "description": "get list of all databases for a specific database server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "username, password and default database name are necessary to get list of databases",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rds.RDSQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rds/environment/name/{env_name}/database/name/{db_name}/list_table": {
            "post": {
                "description": "get list of all tables for a specific database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "username, password and database name are necessary to get list of tables",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rds.RDSQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rds/environment/name/{env_name}/database/name/{db_name}/query": {
            "post": {
                "description": "execute user's query and return results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "username, password, database name and statement are necessary to execute a user query",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rds.RDSQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rds/environment/name/{env_name}/database/name/{db_name}/settings": {
            "post": {
                "description": "stores some information of a specific database server on our system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settings/environment/name/{env_name}/database/name/{db_name}/enabled": {
            "get": {
                "description": "checks that we stored information of a specific database server on our system or not",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of user environment in our system",
                        "name": "env_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of user's database server",
                        "name": "db_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rds.RDSQuery": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "statement": {
                    "type": "string"
                },
                "table": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Relational Database Sql Tool API",
	Description: "This is the relational-database-sql-tool API Documentation.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
